//
// GraphTools library
// Copyright 2017-2019 Illumina, Inc.
// All rights reserved.
//
// Author: Egor Dolzhenko <edolzhenko@illumina.com>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

#pragma once

#include <list>
#include <string>

#include "graphalign/LinearAlignment.hh"
#include "graphalign/TracebackMatrix.hh"

namespace graphtools
{
/**
 * Implements traceback of dynamic programming matrices generated by local and global alignment algorithms
 */
class TracebackRunner
{
public:
    explicit TracebackRunner(const TracebackMatrix& matrix)
        : matrix_(matrix)
    {
    }

    // Performs traceback starting from a given cell of the matrix
    Alignment runTraceback(size_t row_index, size_t col_index);

private:
    void computeTracebackRunForAlignmentOperation(size_t row_index, size_t col_index);
    void tracebackPosition(size_t& row_index, size_t& col_index);
    void convertCurrentRunToAlignmentOperation();
    void softclipQuerySuffix(size_t& row_index);
    void softclipQueryPrefix(size_t& row_index);

    const TracebackMatrix& matrix_;

    std::list<Operation> operations_;
    TracebackStep run_traceback_step;
    size_t run_length = 0;
    size_t run_last_row_index = 0;
    size_t run_last_col_index = 0;
};
}
